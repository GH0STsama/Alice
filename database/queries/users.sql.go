// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: users.sql

package queries

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (id, language_code)
VALUES (?, ?)
RETURNING id, language_code
`

type CreateUserParams struct {
	ID           int64
	LanguageCode string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser, arg.ID, arg.LanguageCode)
	var i User
	err := row.Scan(&i.ID, &i.LanguageCode)
	return i, err
}

const getUserLocale = `-- name: GetUserLocale :one
SELECT language_code FROM users
WHERE id = ?
`

func (q *Queries) GetUserLocale(ctx context.Context, id int64) (string, error) {
	row := q.db.QueryRowContext(ctx, getUserLocale, id)
	var language_code string
	err := row.Scan(&language_code)
	return language_code, err
}

const setUserLocale = `-- name: SetUserLocale :exec
UPDATE users SET language_code = ?
WHERE id = ?
`

type SetUserLocaleParams struct {
	LanguageCode string
	ID           int64
}

func (q *Queries) SetUserLocale(ctx context.Context, arg SetUserLocaleParams) error {
	_, err := q.db.ExecContext(ctx, setUserLocale, arg.LanguageCode, arg.ID)
	return err
}
