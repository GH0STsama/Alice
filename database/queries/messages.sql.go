// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: messages.sql

package queries

import (
	"context"
)

const createMessages = `-- name: CreateMessages :exec
INSERT INTO messages (group_id, welcome_message)
VALUES (?, ?)
`

type CreateMessagesParams struct {
	GroupID        int64
	WelcomeMessage string
}

func (q *Queries) CreateMessages(ctx context.Context, arg CreateMessagesParams) error {
	_, err := q.db.ExecContext(ctx, createMessages, arg.GroupID, arg.WelcomeMessage)
	return err
}

const getWelcomeMessage = `-- name: GetWelcomeMessage :one
SELECT welcome_message FROM messages
WHERE group_id = ?
`

func (q *Queries) GetWelcomeMessage(ctx context.Context, groupID int64) (string, error) {
	row := q.db.QueryRowContext(ctx, getWelcomeMessage, groupID)
	var welcome_message string
	err := row.Scan(&welcome_message)
	return welcome_message, err
}

const setWelcomeMessage = `-- name: SetWelcomeMessage :exec
UPDATE messages
SET welcome_message = ?
WHERE group_id = ?
`

type SetWelcomeMessageParams struct {
	WelcomeMessage string
	GroupID        int64
}

func (q *Queries) SetWelcomeMessage(ctx context.Context, arg SetWelcomeMessageParams) error {
	_, err := q.db.ExecContext(ctx, setWelcomeMessage, arg.WelcomeMessage, arg.GroupID)
	return err
}
