// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: groups.sql

package queries

import (
	"context"
)

const createGroup = `-- name: CreateGroup :exec
INSERT INTO groups (id, title, is_private)
VALUES (?, ?, ?)
`

type CreateGroupParams struct {
	ID        int64
	Title     string
	IsPrivate int64
}

func (q *Queries) CreateGroup(ctx context.Context, arg CreateGroupParams) error {
	_, err := q.db.ExecContext(ctx, createGroup, arg.ID, arg.Title, arg.IsPrivate)
	return err
}

const groupExists = `-- name: GroupExists :many
SELECT id FROM groups
WHERE id = ?
`

func (q *Queries) GroupExists(ctx context.Context, id int64) ([]int64, error) {
	rows, err := q.db.QueryContext(ctx, groupExists, id)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []int64
	for rows.Next() {
		var id int64
		if err := rows.Scan(&id); err != nil {
			return nil, err
		}
		items = append(items, id)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
